name: Generate SBOM

on:
  workflow_run:
    workflows: [Publish Theia IDE Docker Image]
    types: [completed]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        default: 'master'
        required: true

env:
  NODE_VERSION: "20.x"
  REGISTRY_URL: "https://registry.npmjs.org"
  PRODUCT_PATH: "./"
  CDXGEN_VERSION: "11.7.0"

permissions:
  contents: read

jobs:
  generate-sbom:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    outputs:
      project-version: ${{ steps.version.outputs.PROJECT_VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha || github.event.inputs.version }}

      - name: Setup Node SDK
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.REGISTRY_URL }}

      - name: Install dependencies
        run: |
          yarn install
          
      - name: Install cdxgen
        run: |
          npm install -g @cyclonedx/cdxgen@${{ env.CDXGEN_VERSION }}
        
      - name: Generate SBOM
        run: |
          cdxgen -r -o ${{ env.PRODUCT_PATH }}bom.json

      - name: Extract product version
        id: version
        shell: bash
        run: |
          VERSION="$(jq -r '.metadata.component.version' < ${{ env.PRODUCT_PATH }}bom.json)"
          echo "PROJECT_VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Product version is: $VERSION"
          
      - name: Upload sbom
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: sbom
          path: ${{ env.PRODUCT_PATH }}bom.json

  # store-sbom-data: # stores sbom and metadata in a predefined format for otterdog to pick up
  #   needs: ['generate-sbom']
  #   uses: eclipse-csi/workflows/.github/workflows/store-sbom-data.yml@main
  #   with:
  #     projectName: 'theia-ide'
  #     projectVersion: ${{ needs.generate-sbom.outputs.project-version }}
  #     bomArtifact: 'sbom'
  #     bomFilename: 'bom.json'
  #     parentProject: '258617c4-c279-4525-a529-9b297e0568c7'
